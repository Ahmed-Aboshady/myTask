@model ADVA_Test.Models.Employee

@{
    ViewData["Title"] = "Create";
}

<h1>Create Employee</h1>

@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-danger">
        <strong> Error! </strong>@TempData["AlertMessage"]
    </div>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Salary" class="control-label"></label>
                <input asp-for="Salary" class="form-control" />
                <span asp-validation-for="Salary" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeptID" class="control-label"></label>
                <select asp-for="DeptID" class="form-control" asp-items="ViewBag.DeptID"></select>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input"  asp-for="IsManager" onchange="valueChanged()" />
                    @Html.DisplayNameFor(model => model.IsManager)
                </label>
            </div>
            <div class="form-group" style="float:right">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
